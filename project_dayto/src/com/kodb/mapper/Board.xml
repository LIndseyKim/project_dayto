<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">

	<resultMap type="Board" id="BoardResultMap">
		<id  property="postId"  column="post_id"/>
		<result property="userEmail" column="user_email" />
		<result property="postName" column="post_name" />
		<result property="postDate" column="post_date" />
		<result property="postContent" column="post_content" />
		<result property="postRecomm" column="post_recomm" />
		<result property="postPublic" column="post_public" />
		
	</resultMap>

	<resultMap type="Blog" id="BlogResultMap">
		<id  property="postId"  column="post_id"/>
		<result property="userEmail" column="user_email" />
		<result property="postDate" column="post_date" />
		<result property="postName" column="post_name" />
		<result property="postContent" column="post_content" />
	</resultMap>
	
	<insert id="insertBoard" parameterType="Board">
		INSERT INTO BLOG_POST 
		VALUES 
		( seq_blog_post_id.nextVal,#{userEmail}, #{postName}, SYSDATE, #{postContent}, null, #{postPublic})							
	</insert>
	
	<update id="updateBoard">
	UPDATE BLOG_POST
	SET
	post_name = #{postName},
	post_content = #{postContent},
	post_public = #{postPublic}
	WHERE post_id =  #{postId}
    </update>
	
	
	<delete id="deletePost" parameterType="Integer">
		DELETE FROM BLOG_POST
		WHERE post_id = #{value}
	</delete>
	
	<select id="selectBoard" parameterType="String" resultMap="BoardResultMap">
		SELECT * 
		FROM (SELECT * FROM BLOG_POST WHERE user_email=#{value} ORDER BY post_id desc) 
		WHERE ROWNUM = 1
	</select>
	
	<select id="selectPostName" parameterType="String" resultMap="BoardResultMap">
		select * 
		from blog_post 
		where user_email = #{value}	 and post_public = 1 order by post_id
	</select>	
	
	<resultMap type="Blog" id="PostwithPictureResultMap" extends="BlogResultMap">
		<collection property="pictureList" resultMap="picture.PictureResultMap"></collection>
	</resultMap>
	
	<select id="selectPostWithPicture" parameterType="String" resultMap="PostwithPictureResultMap">
 	 SELECT bp.post_id, bp.post_name ,SUBSTR(bp.post_content,1,10) post_content, bp.post_date, bpic.post_pic
		from	blog_post  bp, blog_picture bpic
		where	bp.post_id = bpic.post_id
		and		bp.user_email = #{value}        
		and		bp.post_name is not NULL
        ORDER BY post_id DESC
        
	</select>
	
	<select id="selectPost" parameterType="Integer" resultMap="PostwithPictureResultMap">
		select 	bp.post_id,bpic.blog_pic_id, bp.post_name, bp.user_email, bp.post_date ,bp.post_content, bpic.post_pic
		from	blog_post  bp, blog_picture bpic
		where	bp.post_id = bpic.post_id
		and		bp.post_id = #{value}
	</select>  
	
	<select id="selectPublicBlog" resultMap="PostwithPictureResultMap">
		select 	bp.post_id, substr(bp.post_name,1,10) post_name, bp.user_email ,bp.post_date , substr(bp.post_content,1,15) post_content, bpic.post_pic
		from	blog_post  bp, blog_picture bpic
		where	bp.post_id = bpic.post_id
		and		bp.post_public = 0 order by bp.post_id desc , bpic.blog_pic_id desc
	</select>
	
	<select id="selectSearchBlog" parameterType="String" resultMap="PostwithPictureResultMap">
		select	bp.post_id, bp.post_name, bp.user_email, bp.post_date, bp.post_content, bpic.post_pic 
		from	blog_post bp, blog_picture bpic
		where	bp.post_id = bpic.post_id
		and		bp.post_public = 0 
		and		(bp.post_content like '%'|| #{value} ||'%' or bp.post_name LIKE '%'|| #{value} ||'%')
		order by bp.post_id desc, bpic.blog_pic_id desc 
	</select>
</mapper>
